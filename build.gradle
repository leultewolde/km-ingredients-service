plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
    id "org.sonarqube" version "6.0.1.5171"
    id "de.undercouch.download" version "5.3.0"
}

group = 'com.leultewolde.hidmo'
version = '0.0.1-SNAPSHOT'

//java {
//    toolchain {
//        languageVersion = JavaLanguageVersion.of(24)
//    }
//}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://splunk.jfrog.io/splunk/ext-releases-local"
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.1"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    implementation("io.minio:minio:8.5.17")
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
    implementation 'com.splunk.logging:splunk-library-javalogging:1.11.3'
    implementation 'org.flywaydb:flyway-core'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.google.guava:guava:33.2.0-jre'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.13"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.80
            }
        }
    }
}

sonar {
    properties {
        property "sonar.projectKey", "hidmo-km-ingredients-service"
        property "sonar.projectName", "Hidmo KM Ingredients Service"
        property "sonar.host.url", "https://sonar.leultewolde.com"
    }
}


tasks.register('downloadNewrelic', Download) {
    mkdir 'newrelic'
    src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
    dest file('newrelic')
}

tasks.register('unzipNewrelic', Copy) {
    from zipTree(file('newrelic/newrelic-java.zip'))
    into rootDir
}


check.dependsOn jacocoTestCoverageVerification
