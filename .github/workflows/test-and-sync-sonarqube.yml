name: Test, Analyze, and Create GitHub Issues from SonarQube

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test-and-sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: Grant execute permission to Gradle
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test

      - name: Run SonarQube analysis
        run: |
          ./gradlew sonar \
            -Dsonar.host.url=https://sonar.leultewolde.com \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  create-github-issues:
    runs-on: ubuntu-latest
    needs: test-and-sonar
    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh jq

      - name: Create GitHub Issues from SonarQube
        run: |
          SONAR_HOST="https://sonar.leultewolde.com"
          PROJECT_KEY="hidmo-km-ingredients-service"

          curl -s -u "${{ secrets.SONAR_TOKEN }}:" "$SONAR_HOST/api/issues/search?componentKeys=$PROJECT_KEY&resolved=false" |
          jq -c '.issues[]' | while read -r issue; do
            TITLE=$(echo "$issue" | jq -r '.message')
            KEY=$(echo "$issue" | jq -r '.key')
            RULE=$(echo "$issue" | jq -r '.rule')
            FILE=$(echo "$issue" | jq -r '.component')
            LINE=$(echo "$issue" | jq -r '.line')

            ISSUE_BODY="**Rule**: $RULE  
            **File**: $FILE  
            **Line**: $LINE  
            **Key**: $KEY"

            gh issue create --title "$TITLE" --body "$ISSUE_BODY" --label "sonarqube"
          done
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
